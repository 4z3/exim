#! /bin/sh

# We turn the configure-built build-$foo/lookups/Makefile.predynamic into Makefile

if [ -x /usr/xpg4/bin/sh ] && [ -z "$EXIM_BLOCK_XPG4_LOOP" ]
then
  EXIM_BLOCK_XPG4_LOOP=yes
  export EXIM_BLOCK_XPG4_LOOP
  PATH="/usr/xpg4/bin:$PATH"
  export PATH
  exec /usr/xpg4/bin/sh "$0" "$@"
fi

input=lookups/Makefile.predynamic
target=lookups/Makefile
defs_source=Makefile
tag_marker='MAGIC-TAG-MODS-OBJ-RULES-GO-HERE'

tab='	'

# We always do something now, since there should always be a lookup,
# and now we need to run in order to put the OBJ=$(OBJ)+ rules in.

if grep -q "^CFLAGS_DYNAMIC[ $tab]*=" "$defs_source"
then
  # we have a definition, we're good to go
  enable_dynamic=yes
else
  echo >&2 "Missing CFLAGS_DYNAMIC inhibits building dynamic module lookup"
  enable_dynamic=''
fi

tmp="$target.t"

want_dynamic() {
  local dyn_name="$1"
  grep -q "^LOOKUP_${dyn_name}[ $tab]*=[ $tab]*2" "$defs_source"
}

want_at_all() {
  local want_name="$1"
  grep -q "^LOOKUP_${want_name}[ $tab]*=[ $tab]*." "$defs_source"
}

# The values of these variables will be emitted into the Makefile.

MODS=""
OBJ=""

emit_module_rule() {
  local lookup_name="$1"
  local mod_name
  if [ "${lookup_name%:*}" = "$lookup_name" ]
  then
    mod_name=$(echo $lookup_name | tr A-Z a-z)
  else
    mod_name="${lookup_name#*:}"
    lookup_name="${lookup_name%:*}"
  fi

  if want_dynamic "$lookup_name"
  then
    if [ -z "$enable_dynamic" ]; then
      echo >&2 "Inhibited dynamic modules prevents building dynamic $lookup_name"
      exit 1
    fi
    MODS="${MODS} ${mod_name}.so"
    grep "^LOOKUP_${lookup_name}_" "$defs_source"
    echo "LOOKUP_${mod_name}_INCLUDE = \$(LOOKUP_${lookup_name}_INCLUDE)"
    echo "LOOKUP_${mod_name}_LIBS = \$(LOOKUP_${lookup_name}_LIBS)"
  elif want_at_all "$lookup_name"
  then
    OBJ="${OBJ} ${mod_name}.o"
  fi
}

exec 5>&1
exec > "$tmp"

sed -n "1,/$tag_marker/p" < "$input"

for name_mod in \
    CDB DBM:dbmdb DNSDB DSEARCH IBASE LSEARCH MYSQL NIS NISPLUS ORACLE \
    PASSWD PGSQL SQLITE TESTDB WHOSON
do
  emit_module_rule $name_mod
done

if want_at_all LDAP
then
  OBJ="${OBJ} ldap.o"
fi

# Because the variable is EXPERIMENTAL_SPF and not LOOKUP_SPF we
# always include spf.o and compile a dummy if EXPERIMENTAL_SPF is not
# defined.

OBJ="${OBJ} spf.o"

echo "MODS = $MODS"
echo "OBJ = $OBJ"

sed -n "/$tag_marker/,\$p" < "$input"

exec >&5
mv "$tmp" "$target"


# vim: set ft=sh sw=2 :
